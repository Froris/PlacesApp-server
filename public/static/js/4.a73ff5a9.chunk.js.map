{"version":3,"sources":["components/shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/shared/components/FormElements/Input.js","components/shared/hooks/form-hook.js","components/shared/components/FormElements/ImageUpload.js","components/user/pages/AuthPage.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","inputValue","payload","isTouched","Input","useReducer","initialValue","initialIsValid","inputState","dispatch","id","onInput","useEffect","onChangeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","console","log","fileIsValid","files","ref","display","accept","center","src","alt","onClick","current","click","AuthPage","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","errorMessage","sendRequest","clearError","email","password","inputHandler","setFormData","onSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","error","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.a73ff5a9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\"; // Проверка на наличие текста в поле ввода\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from \"react\";\r\nimport \"./Input.css\";\r\nimport { validate } from \"../../util/validators\";\r\n\r\n// Reducer\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        inputValue: action.payload,\r\n        isValid: validate(action.payload, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  // State\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    inputValue: props.initialValue || \"\",\r\n    isValid: props.initialIsValid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { inputValue, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, inputValue, isValid);\r\n  }, [id, inputValue, onInput, isValid]);\r\n\r\n  // Передача введенных символов в поля, и их валидация\r\n  const onChangeHandler = (event) => {\r\n    dispatch({ type: \"CHANGE\", payload: event.target.value, validators: props.validators });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        value={inputState.value}\r\n        onChange={onChangeHandler}\r\n        onBlur={touchHandler}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        value={inputState.value}\r\n        onChange={onChangeHandler}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\n// Reducer\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      // Валидация\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        // Если значение конкретного поля \"undefined\"\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      // Установка введенных данных\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  // Initial state with reducer\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  // Actions\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value,\r\n      isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      console.log(\"File upload has been failed\");\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickHandler = (e) => {\r\n    let file;\r\n    let fileIsValid = isValid;\r\n\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      file = e.target.files[0];\r\n      setFile(file);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, file, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        onChange={pickHandler}\r\n        ref={filePickerRef}\r\n        id={props.id}\r\n        type=\"file\"\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport \"./AuthPage.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { VALIDATOR_EMAIL, VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner.js\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, errorMessage, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    // Initial inputs\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    // Initial validity\r\n    false\r\n  );\r\n\r\n  // Установка уже введенных данных при смене режима\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        // Set input data\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        // Set input validity\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    // Login\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (error) {\r\n        // Ошибка отлавливается в хуке useHttpClient\r\n      }\r\n    } else {\r\n      // Signup\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (error) {\r\n        // Ошибка отлавливается в хуке useHttpClient\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={errorMessage} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <form onSubmit={onSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && <ImageUpload id=\"image\" center onInput={inputHandler} />}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid password, at least 5 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button disabled={!formState.isValid} type=\"submit\">\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"sourceRoot":""}